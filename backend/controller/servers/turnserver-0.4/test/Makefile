# Makefile.in generated by automake 1.11.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/turnserver
pkgincludedir = $(includedir)/turnserver
pkglibdir = $(libdir)/turnserver
pkglibexecdir = $(libexecdir)/turnserver
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
TESTS = check_turn$(EXEEXT) check_allocation$(EXEEXT) \
	check_account$(EXEEXT)
check_PROGRAMS = check_turn$(EXEEXT) check_allocation$(EXEEXT) \
	check_account$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_check_account_OBJECTS = check_account-check_account.$(OBJEXT) \
	check_account-account.$(OBJEXT) \
	check_account-protocol.$(OBJEXT) \
	check_account-util_sys.$(OBJEXT) \
	check_account-util_crypto.$(OBJEXT) \
	check_account-tls_peer.$(OBJEXT)
check_account_OBJECTS = $(am_check_account_OBJECTS)
check_account_DEPENDENCIES =
check_account_LINK = $(CCLD) $(check_account_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_check_allocation_OBJECTS =  \
	check_allocation-check_allocation.$(OBJEXT) \
	check_allocation-allocation.$(OBJEXT)
check_allocation_OBJECTS = $(am_check_allocation_OBJECTS)
check_allocation_DEPENDENCIES =
check_allocation_LINK = $(CCLD) $(check_allocation_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_check_turn_OBJECTS = check_turn-check_turn.$(OBJEXT) \
	check_turn-protocol.$(OBJEXT) check_turn-util_sys.$(OBJEXT) \
	check_turn-util_crypto.$(OBJEXT) check_turn-tls_peer.$(OBJEXT)
check_turn_OBJECTS = $(am_check_turn_OBJECTS)
check_turn_DEPENDENCIES =
check_turn_LINK = $(CCLD) $(check_turn_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(check_account_SOURCES) $(check_allocation_SOURCES) \
	$(check_turn_SOURCES)
DIST_SOURCES = $(check_account_SOURCES) $(check_allocation_SOURCES) \
	$(check_turn_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.11
AMTAR = tar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CHECK_CFLAGS = 
CHECK_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_PAPER_SIZE = 
DX_CONFIG = Doxyfile
DX_DOCDIR = doc/html
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='turnserver' DOCDIR='doc/html' VERSION='0.4' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = turnserver
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lconfuse -lssl -lrt 
LTLIBOBJS = 
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = turnserver
PACKAGE_BUGREPORT = http://www.turnserver.org/
PACKAGE_NAME = turnserver
PACKAGE_STRING = turnserver 0.4
PACKAGE_TARNAME = turnserver
PACKAGE_URL = 
PACKAGE_VERSION = 0.4
PATH_SEPARATOR = :
PKG_CONFIG = 
SED = sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.4
abs_builddir = /home/crossi/turnserver-0.4/test
abs_srcdir = /home/crossi/turnserver-0.4/test
abs_top_builddir = /home/crossi/turnserver-0.4
abs_top_srcdir = /home/crossi/turnserver-0.4
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/crossi/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# TURN messages and attributes unit tests
check_turn_SOURCES = check_turn.c \
											$(top_builddir)/src/turn.h \
											$(top_builddir)/src/protocol.c \
											$(top_builddir)/src/protocol.h \
											$(top_builddir)/src/util_sys.h \
											$(top_builddir)/src/util_sys.c \
											$(top_builddir)/src/util_crypto.h \
											$(top_builddir)/src/util_crypto.c \
											$(top_builddir)/src/tls_peer.h \
											$(top_builddir)/src/tls_peer.c

check_turn_CFLAGS = 
check_turn_LDADD = 

# allocation unit tests
check_allocation_SOURCES = check_allocation.c \
										 $(top_builddir)/src/allocation.h \
										 $(top_builddir)/src/allocation.c

check_allocation_CFLAGS = 
check_allocation_LDADD = 

# account unit tests
check_account_SOURCES = check_account.c \
										 $(top_builddir)/src/account.h \
										 $(top_builddir)/src/account.c \
										 $(top_builddir)/src/protocol.h \
										 $(top_builddir)/src/protocol.c \
										 $(top_builddir)/src/util_sys.h \
										 $(top_builddir)/src/util_sys.c \
										 $(top_builddir)/src/util_crypto.h \
										 $(top_builddir)/src/util_crypto.c \
										 $(top_builddir)/src/tls_peer.h \
										 $(top_builddir)/src/tls_peer.c

check_account_CFLAGS = 
check_account_LDADD = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
check_account$(EXEEXT): $(check_account_OBJECTS) $(check_account_DEPENDENCIES) 
	@rm -f check_account$(EXEEXT)
	$(check_account_LINK) $(check_account_OBJECTS) $(check_account_LDADD) $(LIBS)
check_allocation$(EXEEXT): $(check_allocation_OBJECTS) $(check_allocation_DEPENDENCIES) 
	@rm -f check_allocation$(EXEEXT)
	$(check_allocation_LINK) $(check_allocation_OBJECTS) $(check_allocation_LDADD) $(LIBS)
check_turn$(EXEEXT): $(check_turn_OBJECTS) $(check_turn_DEPENDENCIES) 
	@rm -f check_turn$(EXEEXT)
	$(check_turn_LINK) $(check_turn_OBJECTS) $(check_turn_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/check_account-account.Po
include ./$(DEPDIR)/check_account-check_account.Po
include ./$(DEPDIR)/check_account-protocol.Po
include ./$(DEPDIR)/check_account-tls_peer.Po
include ./$(DEPDIR)/check_account-util_crypto.Po
include ./$(DEPDIR)/check_account-util_sys.Po
include ./$(DEPDIR)/check_allocation-allocation.Po
include ./$(DEPDIR)/check_allocation-check_allocation.Po
include ./$(DEPDIR)/check_turn-check_turn.Po
include ./$(DEPDIR)/check_turn-protocol.Po
include ./$(DEPDIR)/check_turn-tls_peer.Po
include ./$(DEPDIR)/check_turn-util_crypto.Po
include ./$(DEPDIR)/check_turn-util_sys.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

check_account-check_account.o: check_account.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-check_account.o -MD -MP -MF $(DEPDIR)/check_account-check_account.Tpo -c -o check_account-check_account.o `test -f 'check_account.c' || echo '$(srcdir)/'`check_account.c
	$(am__mv) $(DEPDIR)/check_account-check_account.Tpo $(DEPDIR)/check_account-check_account.Po
#	source='check_account.c' object='check_account-check_account.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-check_account.o `test -f 'check_account.c' || echo '$(srcdir)/'`check_account.c

check_account-check_account.obj: check_account.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-check_account.obj -MD -MP -MF $(DEPDIR)/check_account-check_account.Tpo -c -o check_account-check_account.obj `if test -f 'check_account.c'; then $(CYGPATH_W) 'check_account.c'; else $(CYGPATH_W) '$(srcdir)/check_account.c'; fi`
	$(am__mv) $(DEPDIR)/check_account-check_account.Tpo $(DEPDIR)/check_account-check_account.Po
#	source='check_account.c' object='check_account-check_account.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-check_account.obj `if test -f 'check_account.c'; then $(CYGPATH_W) 'check_account.c'; else $(CYGPATH_W) '$(srcdir)/check_account.c'; fi`

check_account-account.o: $(top_builddir)/src/account.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-account.o -MD -MP -MF $(DEPDIR)/check_account-account.Tpo -c -o check_account-account.o `test -f '$(top_builddir)/src/account.c' || echo '$(srcdir)/'`$(top_builddir)/src/account.c
	$(am__mv) $(DEPDIR)/check_account-account.Tpo $(DEPDIR)/check_account-account.Po
#	source='$(top_builddir)/src/account.c' object='check_account-account.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-account.o `test -f '$(top_builddir)/src/account.c' || echo '$(srcdir)/'`$(top_builddir)/src/account.c

check_account-account.obj: $(top_builddir)/src/account.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-account.obj -MD -MP -MF $(DEPDIR)/check_account-account.Tpo -c -o check_account-account.obj `if test -f '$(top_builddir)/src/account.c'; then $(CYGPATH_W) '$(top_builddir)/src/account.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/account.c'; fi`
	$(am__mv) $(DEPDIR)/check_account-account.Tpo $(DEPDIR)/check_account-account.Po
#	source='$(top_builddir)/src/account.c' object='check_account-account.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-account.obj `if test -f '$(top_builddir)/src/account.c'; then $(CYGPATH_W) '$(top_builddir)/src/account.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/account.c'; fi`

check_account-protocol.o: $(top_builddir)/src/protocol.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-protocol.o -MD -MP -MF $(DEPDIR)/check_account-protocol.Tpo -c -o check_account-protocol.o `test -f '$(top_builddir)/src/protocol.c' || echo '$(srcdir)/'`$(top_builddir)/src/protocol.c
	$(am__mv) $(DEPDIR)/check_account-protocol.Tpo $(DEPDIR)/check_account-protocol.Po
#	source='$(top_builddir)/src/protocol.c' object='check_account-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-protocol.o `test -f '$(top_builddir)/src/protocol.c' || echo '$(srcdir)/'`$(top_builddir)/src/protocol.c

check_account-protocol.obj: $(top_builddir)/src/protocol.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-protocol.obj -MD -MP -MF $(DEPDIR)/check_account-protocol.Tpo -c -o check_account-protocol.obj `if test -f '$(top_builddir)/src/protocol.c'; then $(CYGPATH_W) '$(top_builddir)/src/protocol.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/protocol.c'; fi`
	$(am__mv) $(DEPDIR)/check_account-protocol.Tpo $(DEPDIR)/check_account-protocol.Po
#	source='$(top_builddir)/src/protocol.c' object='check_account-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-protocol.obj `if test -f '$(top_builddir)/src/protocol.c'; then $(CYGPATH_W) '$(top_builddir)/src/protocol.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/protocol.c'; fi`

check_account-util_sys.o: $(top_builddir)/src/util_sys.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-util_sys.o -MD -MP -MF $(DEPDIR)/check_account-util_sys.Tpo -c -o check_account-util_sys.o `test -f '$(top_builddir)/src/util_sys.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_sys.c
	$(am__mv) $(DEPDIR)/check_account-util_sys.Tpo $(DEPDIR)/check_account-util_sys.Po
#	source='$(top_builddir)/src/util_sys.c' object='check_account-util_sys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-util_sys.o `test -f '$(top_builddir)/src/util_sys.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_sys.c

check_account-util_sys.obj: $(top_builddir)/src/util_sys.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-util_sys.obj -MD -MP -MF $(DEPDIR)/check_account-util_sys.Tpo -c -o check_account-util_sys.obj `if test -f '$(top_builddir)/src/util_sys.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_sys.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_sys.c'; fi`
	$(am__mv) $(DEPDIR)/check_account-util_sys.Tpo $(DEPDIR)/check_account-util_sys.Po
#	source='$(top_builddir)/src/util_sys.c' object='check_account-util_sys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-util_sys.obj `if test -f '$(top_builddir)/src/util_sys.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_sys.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_sys.c'; fi`

check_account-util_crypto.o: $(top_builddir)/src/util_crypto.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-util_crypto.o -MD -MP -MF $(DEPDIR)/check_account-util_crypto.Tpo -c -o check_account-util_crypto.o `test -f '$(top_builddir)/src/util_crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_crypto.c
	$(am__mv) $(DEPDIR)/check_account-util_crypto.Tpo $(DEPDIR)/check_account-util_crypto.Po
#	source='$(top_builddir)/src/util_crypto.c' object='check_account-util_crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-util_crypto.o `test -f '$(top_builddir)/src/util_crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_crypto.c

check_account-util_crypto.obj: $(top_builddir)/src/util_crypto.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-util_crypto.obj -MD -MP -MF $(DEPDIR)/check_account-util_crypto.Tpo -c -o check_account-util_crypto.obj `if test -f '$(top_builddir)/src/util_crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_crypto.c'; fi`
	$(am__mv) $(DEPDIR)/check_account-util_crypto.Tpo $(DEPDIR)/check_account-util_crypto.Po
#	source='$(top_builddir)/src/util_crypto.c' object='check_account-util_crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-util_crypto.obj `if test -f '$(top_builddir)/src/util_crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_crypto.c'; fi`

check_account-tls_peer.o: $(top_builddir)/src/tls_peer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-tls_peer.o -MD -MP -MF $(DEPDIR)/check_account-tls_peer.Tpo -c -o check_account-tls_peer.o `test -f '$(top_builddir)/src/tls_peer.c' || echo '$(srcdir)/'`$(top_builddir)/src/tls_peer.c
	$(am__mv) $(DEPDIR)/check_account-tls_peer.Tpo $(DEPDIR)/check_account-tls_peer.Po
#	source='$(top_builddir)/src/tls_peer.c' object='check_account-tls_peer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-tls_peer.o `test -f '$(top_builddir)/src/tls_peer.c' || echo '$(srcdir)/'`$(top_builddir)/src/tls_peer.c

check_account-tls_peer.obj: $(top_builddir)/src/tls_peer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -MT check_account-tls_peer.obj -MD -MP -MF $(DEPDIR)/check_account-tls_peer.Tpo -c -o check_account-tls_peer.obj `if test -f '$(top_builddir)/src/tls_peer.c'; then $(CYGPATH_W) '$(top_builddir)/src/tls_peer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/tls_peer.c'; fi`
	$(am__mv) $(DEPDIR)/check_account-tls_peer.Tpo $(DEPDIR)/check_account-tls_peer.Po
#	source='$(top_builddir)/src/tls_peer.c' object='check_account-tls_peer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_account_CFLAGS) $(CFLAGS) -c -o check_account-tls_peer.obj `if test -f '$(top_builddir)/src/tls_peer.c'; then $(CYGPATH_W) '$(top_builddir)/src/tls_peer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/tls_peer.c'; fi`

check_allocation-check_allocation.o: check_allocation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -MT check_allocation-check_allocation.o -MD -MP -MF $(DEPDIR)/check_allocation-check_allocation.Tpo -c -o check_allocation-check_allocation.o `test -f 'check_allocation.c' || echo '$(srcdir)/'`check_allocation.c
	$(am__mv) $(DEPDIR)/check_allocation-check_allocation.Tpo $(DEPDIR)/check_allocation-check_allocation.Po
#	source='check_allocation.c' object='check_allocation-check_allocation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -c -o check_allocation-check_allocation.o `test -f 'check_allocation.c' || echo '$(srcdir)/'`check_allocation.c

check_allocation-check_allocation.obj: check_allocation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -MT check_allocation-check_allocation.obj -MD -MP -MF $(DEPDIR)/check_allocation-check_allocation.Tpo -c -o check_allocation-check_allocation.obj `if test -f 'check_allocation.c'; then $(CYGPATH_W) 'check_allocation.c'; else $(CYGPATH_W) '$(srcdir)/check_allocation.c'; fi`
	$(am__mv) $(DEPDIR)/check_allocation-check_allocation.Tpo $(DEPDIR)/check_allocation-check_allocation.Po
#	source='check_allocation.c' object='check_allocation-check_allocation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -c -o check_allocation-check_allocation.obj `if test -f 'check_allocation.c'; then $(CYGPATH_W) 'check_allocation.c'; else $(CYGPATH_W) '$(srcdir)/check_allocation.c'; fi`

check_allocation-allocation.o: $(top_builddir)/src/allocation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -MT check_allocation-allocation.o -MD -MP -MF $(DEPDIR)/check_allocation-allocation.Tpo -c -o check_allocation-allocation.o `test -f '$(top_builddir)/src/allocation.c' || echo '$(srcdir)/'`$(top_builddir)/src/allocation.c
	$(am__mv) $(DEPDIR)/check_allocation-allocation.Tpo $(DEPDIR)/check_allocation-allocation.Po
#	source='$(top_builddir)/src/allocation.c' object='check_allocation-allocation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -c -o check_allocation-allocation.o `test -f '$(top_builddir)/src/allocation.c' || echo '$(srcdir)/'`$(top_builddir)/src/allocation.c

check_allocation-allocation.obj: $(top_builddir)/src/allocation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -MT check_allocation-allocation.obj -MD -MP -MF $(DEPDIR)/check_allocation-allocation.Tpo -c -o check_allocation-allocation.obj `if test -f '$(top_builddir)/src/allocation.c'; then $(CYGPATH_W) '$(top_builddir)/src/allocation.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/allocation.c'; fi`
	$(am__mv) $(DEPDIR)/check_allocation-allocation.Tpo $(DEPDIR)/check_allocation-allocation.Po
#	source='$(top_builddir)/src/allocation.c' object='check_allocation-allocation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_allocation_CFLAGS) $(CFLAGS) -c -o check_allocation-allocation.obj `if test -f '$(top_builddir)/src/allocation.c'; then $(CYGPATH_W) '$(top_builddir)/src/allocation.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/allocation.c'; fi`

check_turn-check_turn.o: check_turn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-check_turn.o -MD -MP -MF $(DEPDIR)/check_turn-check_turn.Tpo -c -o check_turn-check_turn.o `test -f 'check_turn.c' || echo '$(srcdir)/'`check_turn.c
	$(am__mv) $(DEPDIR)/check_turn-check_turn.Tpo $(DEPDIR)/check_turn-check_turn.Po
#	source='check_turn.c' object='check_turn-check_turn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-check_turn.o `test -f 'check_turn.c' || echo '$(srcdir)/'`check_turn.c

check_turn-check_turn.obj: check_turn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-check_turn.obj -MD -MP -MF $(DEPDIR)/check_turn-check_turn.Tpo -c -o check_turn-check_turn.obj `if test -f 'check_turn.c'; then $(CYGPATH_W) 'check_turn.c'; else $(CYGPATH_W) '$(srcdir)/check_turn.c'; fi`
	$(am__mv) $(DEPDIR)/check_turn-check_turn.Tpo $(DEPDIR)/check_turn-check_turn.Po
#	source='check_turn.c' object='check_turn-check_turn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-check_turn.obj `if test -f 'check_turn.c'; then $(CYGPATH_W) 'check_turn.c'; else $(CYGPATH_W) '$(srcdir)/check_turn.c'; fi`

check_turn-protocol.o: $(top_builddir)/src/protocol.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-protocol.o -MD -MP -MF $(DEPDIR)/check_turn-protocol.Tpo -c -o check_turn-protocol.o `test -f '$(top_builddir)/src/protocol.c' || echo '$(srcdir)/'`$(top_builddir)/src/protocol.c
	$(am__mv) $(DEPDIR)/check_turn-protocol.Tpo $(DEPDIR)/check_turn-protocol.Po
#	source='$(top_builddir)/src/protocol.c' object='check_turn-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-protocol.o `test -f '$(top_builddir)/src/protocol.c' || echo '$(srcdir)/'`$(top_builddir)/src/protocol.c

check_turn-protocol.obj: $(top_builddir)/src/protocol.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-protocol.obj -MD -MP -MF $(DEPDIR)/check_turn-protocol.Tpo -c -o check_turn-protocol.obj `if test -f '$(top_builddir)/src/protocol.c'; then $(CYGPATH_W) '$(top_builddir)/src/protocol.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/protocol.c'; fi`
	$(am__mv) $(DEPDIR)/check_turn-protocol.Tpo $(DEPDIR)/check_turn-protocol.Po
#	source='$(top_builddir)/src/protocol.c' object='check_turn-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-protocol.obj `if test -f '$(top_builddir)/src/protocol.c'; then $(CYGPATH_W) '$(top_builddir)/src/protocol.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/protocol.c'; fi`

check_turn-util_sys.o: $(top_builddir)/src/util_sys.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-util_sys.o -MD -MP -MF $(DEPDIR)/check_turn-util_sys.Tpo -c -o check_turn-util_sys.o `test -f '$(top_builddir)/src/util_sys.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_sys.c
	$(am__mv) $(DEPDIR)/check_turn-util_sys.Tpo $(DEPDIR)/check_turn-util_sys.Po
#	source='$(top_builddir)/src/util_sys.c' object='check_turn-util_sys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-util_sys.o `test -f '$(top_builddir)/src/util_sys.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_sys.c

check_turn-util_sys.obj: $(top_builddir)/src/util_sys.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-util_sys.obj -MD -MP -MF $(DEPDIR)/check_turn-util_sys.Tpo -c -o check_turn-util_sys.obj `if test -f '$(top_builddir)/src/util_sys.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_sys.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_sys.c'; fi`
	$(am__mv) $(DEPDIR)/check_turn-util_sys.Tpo $(DEPDIR)/check_turn-util_sys.Po
#	source='$(top_builddir)/src/util_sys.c' object='check_turn-util_sys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-util_sys.obj `if test -f '$(top_builddir)/src/util_sys.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_sys.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_sys.c'; fi`

check_turn-util_crypto.o: $(top_builddir)/src/util_crypto.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-util_crypto.o -MD -MP -MF $(DEPDIR)/check_turn-util_crypto.Tpo -c -o check_turn-util_crypto.o `test -f '$(top_builddir)/src/util_crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_crypto.c
	$(am__mv) $(DEPDIR)/check_turn-util_crypto.Tpo $(DEPDIR)/check_turn-util_crypto.Po
#	source='$(top_builddir)/src/util_crypto.c' object='check_turn-util_crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-util_crypto.o `test -f '$(top_builddir)/src/util_crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/util_crypto.c

check_turn-util_crypto.obj: $(top_builddir)/src/util_crypto.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-util_crypto.obj -MD -MP -MF $(DEPDIR)/check_turn-util_crypto.Tpo -c -o check_turn-util_crypto.obj `if test -f '$(top_builddir)/src/util_crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_crypto.c'; fi`
	$(am__mv) $(DEPDIR)/check_turn-util_crypto.Tpo $(DEPDIR)/check_turn-util_crypto.Po
#	source='$(top_builddir)/src/util_crypto.c' object='check_turn-util_crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-util_crypto.obj `if test -f '$(top_builddir)/src/util_crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/util_crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/util_crypto.c'; fi`

check_turn-tls_peer.o: $(top_builddir)/src/tls_peer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-tls_peer.o -MD -MP -MF $(DEPDIR)/check_turn-tls_peer.Tpo -c -o check_turn-tls_peer.o `test -f '$(top_builddir)/src/tls_peer.c' || echo '$(srcdir)/'`$(top_builddir)/src/tls_peer.c
	$(am__mv) $(DEPDIR)/check_turn-tls_peer.Tpo $(DEPDIR)/check_turn-tls_peer.Po
#	source='$(top_builddir)/src/tls_peer.c' object='check_turn-tls_peer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-tls_peer.o `test -f '$(top_builddir)/src/tls_peer.c' || echo '$(srcdir)/'`$(top_builddir)/src/tls_peer.c

check_turn-tls_peer.obj: $(top_builddir)/src/tls_peer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -MT check_turn-tls_peer.obj -MD -MP -MF $(DEPDIR)/check_turn-tls_peer.Tpo -c -o check_turn-tls_peer.obj `if test -f '$(top_builddir)/src/tls_peer.c'; then $(CYGPATH_W) '$(top_builddir)/src/tls_peer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/tls_peer.c'; fi`
	$(am__mv) $(DEPDIR)/check_turn-tls_peer.Tpo $(DEPDIR)/check_turn-tls_peer.Po
#	source='$(top_builddir)/src/tls_peer.c' object='check_turn-tls_peer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(check_turn_CFLAGS) $(CFLAGS) -c -o check_turn-tls_peer.obj `if test -f '$(top_builddir)/src/tls_peer.c'; then $(CYGPATH_W) '$(top_builddir)/src/tls_peer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/tls_peer.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
