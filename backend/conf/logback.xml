<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2012 INRIA 

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
  logback configuration file for myMed logging.

  Here we have 2 different loggers, 1 on two different files and 1 to the standard
  output.

  In order for the logging service to work, this file should be passed to the JVM as:
  -Dlogback.configurationFile=PATH_TO_THIS_FILE

  or it has to be accessible from the CLASSPATH.

  The logger is also set up in order to periodically scan this file, the period is set
  to 5 minutes. So, if we want to turn on or off a different log we can do that on the
  fly.

  Milo Casagrande milo.casagrande@inria.fr, 2011
 -->
<!-- Set debug to 'true' to turn it on, it will print information on the stdout. Set it to 'off' to suppress -->
<configuration debug="false" scan="true" scanPeriod="5 minutes">
  <contextName>myMed</contextName>
  <property name="LOG_DIR" value="/var/log/mymed"/>
  <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} %-5level [%thread] [%file] %msg%n</pattern>
    </encoder>
  </appender>

  <!-- The appender for the info logger  -->
  <!-- We accept only info level logging statement, all the others are denied -->
  <!-- It also has a rolling policy: daily and gzipped files -->
  <appender name="info.file" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>info</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <file>${LOG_DIR}/mymed-backend-info.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/mymed-backend-info-%d.log.gz</fileNamePattern>
    </rollingPolicy>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} %-5level [%thread] [%file] %msg%n%ex{full}</pattern>
    </encoder>
  </appender>

  <!-- The appender for the debug logger -->
  <!-- We accept only debug level logging statement, all the others are denied -->
  <!-- It also has a rolling policy: daily and gzipped files -->
  <appender name="debug.file" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>debug</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <file>${LOG_DIR}/mymed-backend-debug.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/mymed-backend-debug-%d.log.gz</fileNamePattern>
    </rollingPolicy>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} %-5level [%thread] [%file] %msg%n%ex{full}</pattern>
    </encoder>
  </appender>

  <!-- Logger for the backend. To turn off the logger set its level to 'off' -->
  <!-- To turn it on set it to 'info' for logging only INFO level, or 'debug' for debugging -->
  <logger name="mymed.backend.logger" level="debug" additivity="false">
    <appender-ref ref="info.file"/>
    <appender-ref ref="debug.file"/>
  </logger>

  <!-- The default logger, default is to be set to 'info' and to print to the stdout. -->
  <!--  To turn it off, set its level to 'off' -->
  <root level="info">
    <appender-ref ref="stdout" />
  </root>
</configuration>
