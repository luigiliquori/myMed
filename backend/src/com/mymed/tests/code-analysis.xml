<?xml version="1.0" encoding="UTF-8"?>
<!--
Ant build file to run analysis tools for mymed.
It depends on the build.xml files, since it needs also some JARs that are created there.

Milo Casagrande <milo.casagrande@inria.fr>, 2011
-->
<project name="mymed-code-analysis" default="all" basedir=".">
  <property name="results.dir"         location="results"/>
  <property name="tests.dir"           location="."/>
	<property name="lib.dir"             location="lib" />
  <property name="controller.dir"      location="../controller"/>
  <property name="model.dir"           location="../model"/>
  <property name="utils.dir"           location="../utils"/>
  <property name="java.dir"            location="/usr/share/java"/>
  <property name="findbugs.dir"        location="/usr/share/findbugs"/>
	<property name="junit.dir"           location="/usr/share/junit"/>
	<property name="libs.dir"            location="../../../../lib"/>
  <property name="cassandra.dir"       location="../../../../protocols/cassandra/cassandra"/>
  <property name="src.dir"             location="${controller.dir}:${model.dir}:${utils.dir}"/>

	<!-- Fileset with the file extension we want to check -->
	<fileset id="files.to.check" dir="../">
    <include name="**/*.java"/>
    <exclude name="**/*.xml"/>
    <exclude name="**/*.html"/>
    <exclude name="**/*.php"/>
    <exclude name="**/*.jar"/>
	</fileset>

  <!-- Fix the classpath to add the necessary resources -->
	<path id="mymed.classpath" description="Classpath to be used for running the tests">
	  <pathelement path="${java.class.path}"/>
	  <pathelement location="."/>
    <pathelement location="${lib.dir}/mymed.jar"/>
    <pathelement location="${lib.dir}/jSynapse.jar"/>
    <pathelement location="${lib.dir}/mymedtest.jar"/>
		<pathelement location="${junit.dir}/junit.jar"/>
    <fileset dir="${libs.dir}">
      <include name="**/*.jar"/>
      <exclude name="apache-cassandra-0.7.6-2.jar"/>
      <exclude name="jSynapse.jar"/>
      <exclude name="libthrift-0.5.jar"/>
      <exclude name="deployment-javaee-full.jar"/>
    </fileset>
		<fileset dir="${cassandra.dir}/lib" includes="*.jar"/>
	  <!-- This is necessary for PMD and FindBugs to work under Jenkins -->
	  <!-- Looks like it is necessary to specify the path to the needed JARs -->
	  <fileset dir="${java.dir}">
	    <include name="**/pmd.jar"/>
	    <include name="**/jaxen.jar"/>
	    <include name="**/asm.jar"/>
	    <include name="*.jar"/>
	    <include name="**/*.jar"/>
	  </fileset>
	  <fileset dir="${findbugs.dir}">
	   <include name="*.jar"/>
     <include name="**/*.jar"/>
	  </fileset>
	</path>

  <!-- Used if we want to pretty print the classpath in case we need to debug -->
  <pathconvert description="Pretty print the classpath" property="echo.path.compile" refid="mymed.classpath" pathsep="${line.separator}|  |--" />

  <!-- Ant tasks defined for running other analysis tools -->
  <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="mymed.classpath"/>
  <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="mymed.classpath"/>

  <target name="init" description="Initialize the necessary directories">
    <mkdir dir="${results.dir}"/>
  </target>

  <target name="clean" description="Remove the directories used for the build">
    <delete dir="${results.dir}"/>
  </target>

  <target name="pmd" depends="init" description="Analyze the code with PMD">
    <pmd shortFilenames="true" encoding="UTF-8" targetjdk="1.6">
      <ruleset>basic,coupling,optimizations,strings,unusedcode,controversial,sunsecure,codesize,design,typeresolution,javabeans,logging-java</ruleset>
      <formatter type="xml" toFile="${results.dir}/pmd.xml"/>
      <fileset refid="files.to.check"/>
	  </pmd>
	</target>

  <target name="findbugs" depends="init" description="Analyze the code with FindBugs">
    <findbugs home="${findbugs.dir}" output="xml" outputFile="${results.dir}/findbugs.xml" reportLevel="low" effort="max">
      <class location="../"/>
    	<auxClasspath location="${cassandra.dir}/lib/"/>
      <sourcePath>
        <fileset refid="files.to.check"/>
      </sourcePath>
    </findbugs>
  </target>

	<target name="all" depends="pmd,findbugs" description="Run all the tasks"/>
</project>
