<?xml version="1.0" encoding="UTF-8"?>
<!--
Ant build file to run JUnit tests for mymed class

Milo Casagrande <milo.casagrande@inria.fr>, 2011
-->
<project name="mymed" default="test" basedir=".">
	<property name="build.dir"           location="build" />
	<property name="lib.dir"             location="lib" />
	<property name="tests.dir"           location="." />
	<property name="controller.dir"      location="../controller" />
	<property name="model.dir"           location="../model" />
	<property name="utils.dir"           location="../utils" />
	<property name="libs.dir"            location="../../../../lib" />
	<property name="cassandra.dir"       location="../../../../protocols/cassandra/cassandra" />
	<property name="synapse.dir"         location="../../../../protocols/synapse/jSynapse/src" />
	<property name="src.dir"             location="${controller.dir}:${model.dir}:${utils.dir}" />

 <!-- Fix the classpath to add the necessary resources -->
	<path id="mymed.classpath">
		<pathelement path="${java.class.path}"/>
	  <pathelement location="${lib.dir}/mymed.jar"/>
	  <pathelement location="${lib.dir}/jSynapse.jar"/>
	  <pathelement location="${lib.dir}/mymedtest.jar"/>
	  <pathelement location="."/>
		<fileset dir="${libs.dir}" includes="*.jar" />
		<fileset dir="${cassandra.dir}/lib" includes="*.jar"/>
	</path>

	<!-- Create the directories structure -->
	<target name="init" depends="clean" description="Initialize the necessary directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${lib.dir}" />
	</target>

	<!-- Build synapse -->
	<target name="synapse" depends="init" description="Compile and create the Synapse JAR">
		<javac srcdir="${synapse.dir}" destdir="${build.dir}" debug="on">
			<classpath refid="mymed.classpath"/>
		</javac>
		<jar destfile="${lib.dir}/jSynapse.jar" basedir="${build.dir}" duplicate="preserve" index="true" />
	</target>

	<!-- Compile mymed -->
	<target name="compile" depends="synapse" description="Compile the necessary files">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on">
			<exclude name="InteractionManagerTest.java"/>
			<classpath refid="mymed.classpath"/>
		</javac>
		<jar destfile="${lib.dir}/mymed.jar" basedir="${build.dir}" duplicate="preserve" index="true"/>
	</target>

	<!-- Compile the tests -->
	<target name="compiletest" depends="compile,cleanbuild" description="Compile the test classes">
		<javac srcdir="${tests.dir}" destdir="${build.dir}" debug="on">
			<classpath refid="mymed.classpath"/>
			<exclude name="InteractionManagerTest*"/>
			<include name="*.java"/>
		</javac>
		<jar destfile="${lib.dir}/mymedtest.jar" basedir="${build.dir}" duplicate="preserve" index="true"/>
	</target>

	<!-- Run the tests -->
	<target name="test" depends="compiletest" description="Run all the JUnit tests">
		<junit printsummary="yes" haltonfailure="no" showoutput="yes">
			<classpath refid="mymed.classpath"/>
			<test name="com.mymed.tests.MyMedTestSuite"/>
			<batchtest fork="yes"/>
			<formatter type="plain"/>
		</junit>
	</target>

	<!-- Clean the JARs so that we have small new JARs for the compile -->
	<target name="cleanbuild" description="Clean the build dir from the included JARs">
		<delete includeemptydirs="true" failonerror="false">
		  <fileset dir="${build.dir}" includes="**/*"/>
		</delete>
	</target>

	<!-- Clean up everything -->
	<target name="clean" description="Remove the directories used for the build">
	  <delete dir="${build.dir}" />
		<delete dir="${lib.dir}" />
	</target>
</project>